// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Role {
  student
  counselor
  admin
  user
}


model Publisher {
  id             String   @id @default(uuid())
  name           String
  apiKey         String   @unique
  scriptEndpoint String   @unique
  createdAt      DateTime @default(now())
  leads          Lead[]
}



model Lead {
  id            String   @id @default(uuid())
  publisherId   String
  publisher     Publisher @relation(fields: [publisherId], references: [id])
  hubspotUtk    String?
  pageUrl       String
  pageTitle     String
  referrer      String?
  snippet       String?
  utmSource     String?
  utmMedium     String?
  utmCampaign   String?
  utmTerm       String?
  utmContent    String?
  userAgent     String
  platform      String
  language      String
  screenWidth   Int
  screenHeight  Int
  timestamp     DateTime

  source        String? // Added to support relation to CampaignSource

  campaignSource   CampaignSource? @relation(fields: [source], references: [code])
  conversions      Conversion[]
  logs             SubmissionLog[]

  formData        Json? // <-- Add this line
}


model CampaignSource {
  id        Int     @id @default(autoincrement())
  code      String  @unique // Matches Lead.source
  name      String?
  notes     String?
  createdAt DateTime @default(now())

  leads     Lead[]
}

model Conversion {
  id        Int      @id @default(autoincrement())
  leadId    String
  type      String   // e.g. "signup", "purchase"
  value     Float?   // Optional value ($, etc)
  notes     String?
  createdAt DateTime @default(now())

  lead      Lead     @relation(fields: [leadId], references: [id])
}

model SubmissionLog {
  id             Int      @id @default(autoincrement())
  leadId         String
  status         String   // e.g., "success", "error", "retry"
  responseCode   Int?
  responseBody   Json?
  attemptedAt    DateTime @default(now())

  lead           Lead     @relation(fields: [leadId], references: [id])
}